template(name='comments')
    .ui.inline.header
        +i name='comments' classes='ui inline mini image'
        |comments
    div
    if currentUser
        .ui.fluid.icon.large.input
            i.plus.icon
            input.add_comment(model='text' placeholder='add')
    .ui.comments
        each doc_comments
            .comment
                .content
                    .ui.header #{body}
                    .meta #{when}
                        unless is_frontdesk
                            |by 
                            a(href="/user/#{author.username}") #{author.first_name} #{author.last_name}
                        if currentUser
                            +voting_small
                            if can_edit
                                +remove_button


template(name='viewing')
    div
    if currentUser
        unless viewed_by
            .ui.icon.button.mark_read(title='mark read')
                i.eye.icon
        else 
            //- if is_dev
            .ui.icon.button.mark_unread(title='mark unread')
                i.eye.slash.icon
    .ui.inline.small.grey.header viewed by
    each read_ids
        +user_info


template(name='goto_model')
    if is_staff
        a.goto_model(href="/m/#{slug}" title="goto #{slug}")
            i.external.blue.icon
            //- +i name='external-link'

template(name='events_column')
    .ui.accordion
        h4.active.title
            // +i name='edit-property' classes='ui inline image'
            //- i.rss.icon
            | log
            i.dropdown.icon
        .active.content
            .ui.feed
                each log_events
                    .event
                        .label
                            img.ui.rounded.image(src="{{c.url object.image width=400 height=400 gravity='face' crop='fill'}}")
                        .content
                            .summary
                                |#{body}
                                .date
                                    |#{when}
                                if is_dev
                                    +remove_button




template(name='follow')
    .ui.segment
        .ui.header
            i.user.plus.icon
            |Follow
        +user_list_toggle key='follower_ids' icon='rss' add_label='Follow' remove_label='Unfollow' color='black'


template(name='toggle_edit')
    .ui.basic.button.toggle_edit
        i.pencil.icon

template(name='user_list_info')
    a.ui.basic.button.item(href="/user/#{user._id}/view")
        img.ui.avatar.image(src=user.profile.profilePic title=name)
        |#{user.profile.name}
        +user_status user

template(name='call_watson')
    .ui.button.autotag
        //- i.chess.icon
        +ismall name='dna-helix'
        |call watson

template(name='view_full_button')
    a.ui.icon.basic.button(href="/view/#{_id}" class=classes data-tooltip='View Full')
        i.double.icon
        |view

template(name='user_status')
    if online 
        // .ui.label(class='{{labelClass}}') 
        .ui.empty.label(title='online')
        // img.ui.avatar.image(src="https://img.icons8.com/connection-user_status-on/color/48" title='Online' width="48" height="48")
        // |Online
    else if idle
        .ui.empty.yellow.label(title='idle')
        // .ui.label(class='{{labelClass}}') Idle
    // else 
    //     |Offline

template(name='user_card')
    with user
        .ui.small.horizontal.card
            .image
                img.ui.rounded.mini.image(src="{{c.url profile_image_id width=300 height=300 gravity='face' crop='fill'}}")
            .content    
                a.header(href="/user/#{username}") #{first_name} #{last_name} 
                //- .meta @#{username}
                strong $#{credit}
                small credit
                //- +emails_edit    
        //- +user_status user


template(name='small_horizontal_user_card')
    with user
        .ui.small.horizontal.card
            .image
                if profile_photo
                    img.ui.rounded.tiny.image(src="{{c.url profile_photo width=200 height=200 gravity='face' crop='fill'}}")
                else if image_id
                    img.ui.rounded.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
                else if image_id
                    img.ui.rounded.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
            .content    
                a.header(href="/student/#{username}") #{first_initial} #{last_name} 
                //- .meta @#{username}
                //- span(title='points')
                //-     |#{points} pts
                //- span(title='karma')
                //-     |#{karma} 
                //-     i.yin.yang.icon
                each tags
                    .ui.small.basic.label #{this}
                if is_admin
                    div
                    +user_email
                //- +emails_edit    
        +user_status user


template(name='user_email')
    .ui.small.inline.header #{email_address}
    if email_verified
        .ui.basic.label 
            i.green.checkmark.icon
            |verified
    else
        .ui.orange.label 
            i.ban.icon
            |unverified
        

template(name='big_user_card')
    with user
        //- .ui.card
        //- .ui.card(class=student_status_class)
        .ui.card
            .image
                img.ui.rounded.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
            .content
                a.header(href="/user/#{username}")
                     |#{first_name} #{last_name} 
                    //- .meta @#{username}
                    //- +array_view key='tags' label='Tags' direct=true


template(name='unit_key_checkout')
    .ui.compact.button.unit_key_checkout
        +i name='key' classes='ui mini inline image'
        strong Checkout Unit Key


template(name='user_info')
    a.ui.compact.button(href="/user/#{user.username}/")
        if user.image_id
            img.ui.avatar.inline.image(src="{{c.url user.image_id width=300 height=300 gravity='face' crop='fill'}}")
        else if user.image_id
            img.ui.avatar.inline.image(src="{{c.url user.image_id width=300 height=100 gravity='face' crop='fill'}}")
        //- .visible.content
        |#{user.first_name} #{user.last_name}
        //- |@#{user.username}
        +user_status user
        //- .hidden.content
        //-     |view
        //-     i.right.chevron.icon


template(name='username_info')
    .ui.small.compact.basic.button.goto_profile
        if is_student
            img.ui.tiny.image(src="{{c.url user.profile_image_id width=100 height=100}}")
        |#{user.name}
        //- |@#{user.username}
        +user_status user


template(name='role_editor')
    each roles
        .ui.basic.button #{this}

template(name='author_info')
    with author
        a.ui.compact.basic.button(href="/user/#{username}")
            if image_id
                img.ui.avatar.image(src="{{c.url image_id width=100 height=100 gravity='face' crop='fill'}}")
            else if image_id
                img.ui.avatar.image(src="{{c.url image_id width=100 height=100 gravity='face' crop='fill'}}")
            |by #{first_name} #{last_name}

template(name='creation_info')
    .ui.small.inline.header #{when}


template(name='user_list_toggle')
    if currentUser
        .ui.icon.compact.button.toggle(class=user_list_toggle_class title=label)
            if in_list
                i.large.icon(class=remove_icon)
            else
                i.large.icon(class=add_icon)
            //- +ismall name=icon
            //- |#{label}
        //- each list_users
        //-     +user_info


template(name='voting')
    .ui.icon.button.upvote(title='upvote')
        i.thumbs.up.icon(class=upvote_class)
    //- each upvoter_ids
    //-     +user_info
    .ui.icon.button.downvote(title='downvote')
        i.thumbs.down.icon(class=downvote_class)
    //- each downvoter_ids
    //-     +user_info
    if points
        strong #{points} pts
    if anon_points
        strong #{anon_points} anon pts
    

template(name='voting_small')
    if points
        strong #{points}
    i.thumbs.up.link.icon.upvote(class=upvote_class)
    //- each upvoter_ids
    //-     +user_info
    i.thumbs.down.link.icon.downvote(class=downvote_class)
    //- each downvoter_ids
    //-     +user_info



template(name='voting_full')
    div
    //- .ui.inline.header 
    //-     //- +i name='elections'
    //-     |voting
    .ui.large.icon.button.upvote(title='upvote')
        i.thumbs.up.icon(class=upvote_class)
        //- |like
    .ui.large.icon.button.downvote(title='downvote')
        i.thumbs.down.icon(class=downvote_class)
        //- |dislike
    if points
        .ui.large.basic.label(title='points') #{points} pts
        .ui.large.basic.label(title='anon points') #{anon_points} anon pts
    if upvoter_ids
        .ui.small.grey.header 
            i.thumbs.up.outline.icon
            |upvoters
        each upvoter_ids
            +user_info
    if downvoter_ids
        .ui.small.grey.header 
            i.thumbs.up.outline.icon
            |downvoters
        each downvoter_ids
            +user_info



template(name='view_button')
    a.ui.icon.compact.basic.button.view(title='view' href="/m/#{model}/#{_id}/view")
        //- i.right.chevron.large.icon
        +i name='chevron right' classes='ui mini inline image'


template(name='remove_button')
    unless is_frontdesk
        .ui.icon.button.remove_doc(title='delete')
            i.remove.icon
            //- |Delete

template(name='add_button')
    a.ui.large.basic.button.add(title="add #{model}")
        //- |#{model.icon}
        if model.icon
            //- i.icon(class=icon)
            +ismall name=model.icon classes='ui inline image'
        else 
            i.plus.icon
        if label
            |#{label}
        //- |#{model}



//- template(name='edit_button')
//-     a.ui.basic.button.icon.edit(title='Edit' href="/m/#{model}/#{_id}/edit")
//-         i.blue.pencil.icon
//-         |Edit


template(name='save_button')
    a.ui.basic.button.large.icon.save(title='Save' href="/m/#{model}/#{_id}/view")
        i.checkmark.icon
        |Save

template(name='toggle_button')
    .ui.icon.toggle.basic.button(title=label)
        i.icon(class=icon)
    each selected
        |#{username}


template(name='view_user_button')
    .view_user.view(title="view #{username}")
        i.play.icon
        |View

template(name='add_model_button')
    .ui.icon.basic.button.add(title="add #{model}")
        i.plus.icon
        |#{model}






            
template(name='email_validation_check')
    //- if email_verified
    //-     .ui.large.basic.button
    //-         i.checkmark.icon
    //-         |email validated
    unless email_verified
        .ui.basic.fluid.button.send_verification
            //- i.user.shield.icon
            //- +i name='user-shield' classes='ui inline image'
            |resend verification email
        if times
            .ui.label
                |#{times}
            //- else
                //- |#{times}x sent
        if is_staff
            .ui.button.toggle_email_verified
                |mark email verified
        
        
template(name='lease_expiration_check')
    div
    if expiration_date
        i.grey.clock.icon
        //- +i name='clock' classes='ui avatar image'
        |lease expiring 
        |#{lease_expiring}
        
        
template(name='rules_and_regs_check')
    if is_staff
        if rules_signed
            a.ui.basic.button(href="/m/rules_regs_signing/#{rules_signed._id}/view" title='click to view/edit signing document')
                i.signature.large.icon
                |rules and regs signed 
        else
            .ui.basic.button
                i.signature.large.icon
                | rules+regs unsigned
    //- else
    //-     unless rules_signed
    //-         .ui.large.basic.button.sign_rules
    //-             i.signature.icon
    //-             |click to sign rules and regulations
        //- else if is_staff
        //-     .ui.large.basic.button
        //-         i.signature.icon
        //-         |rules and regs signed 
        
        
        
template(name='user_guidelines_check')
    if is_staff
        if guidelines_signed
            a.ui.basic.button(href="/m/sign_guidelines/#{guidelines_signed._id}/view" title='click to view/edit signing document')
                i.signature.icon
                |student guidelines signed 
        else
            .ui.basic.fluid.button
                i.signature.icon
                | student guidelines not signed
    else
        unless guidelines_signed
            .ui.large.basic.fluid.button.sign_guidelines
                i.signature.icon
                | sign student guidelines
    //-     else if is_staff
    //-         .ui.large.basic.button
    //-             i.signature.icon
    //-             |rules and regs signed 
                
        
template(name='student_key_check')
    //- unless key_on_file
    //-     .ui.large.orange.basic.button
    //-         i.ban.icon
    //-         |key not on file 
    //- else
    .ui.large.basic.button
        i.key.icon
        |Key on File 
        
        
template(name='guest_waiver_check')
    unless waiver_signed
        .ui.large.basic.button
            i.signature.icon
            |guest waiver not signed 
        
        
            
        
template(name='kiosk_send_message')                
    .ui.big.fluid.button.create_message 
        i.envelope.icon
        |send private message
    if sending_message
        +sending_kiosk_message

template(name='sending_kiosk_message')
    .ui.header include contact info
    with sending_message_doc
        +textarea_edit key='body' direct=true
        .ui.big.fluid.green.button.send_message send
    .ui.big.button.cancel_message cancel
                    



template(name='suggestion_box')
    .ui.inline.header 
        |suggestion box
    .ui.icon.button.add_suggestion
        i.plus.icon
    .ui.bulleted.list
        each public_suggestions
            .item 
                |#{content}
                small #{when}
                if is_admin
                    +remove_button
    
    
    .ui.new_suggestion_modal.modal 
        i.close.icon
        .header add suggestion
        .content
            with editing_suggestion
                +textarea_edit key='content' direct=true
                +boolean_edit key='public' direct=true
        .actions    
            .ui.deny.circular.button cancel
            .ui.green.positive.labeled.icon.circular.button
                i.checkmark.icon
                |submit


template(name='user_array_list')
    .ui.list
        each users
            .item
                +user_info

            
template(name='user_array_element_toggle')
    .ui.circular.button.toggle_element(class=user_array_element_toggle_class)
        |#{value}

template(name='user_string_toggle')
    .ui.circular.button.toggle_element(class=user_string_element_toggle_class)
        |#{value}



template(name='key_value_edit')
    .ui.compact.button.set_key_value(class=set_key_value_class)
        if icon 
            i.icon(class=icon)
        |#{label}
