template(name='questions')
    .ui.stackable.padded.grid
        .row
            .four.wide.column
                .ui.inline.header 
                    +i name='question'
                    |questions
                .ui.icon.button.add_question(title='add question')
                    i.plus.icon
                +question_cloud
            .twelve.wide.column
                each questions
                    +question_segment


template(name='question_cloud')
    div
    //- #cloud
        //- .ui.left.icon.input
        //-     i.search.icon
        //-     +inputAutocomplete settings=settings id="search" class="" autocomplete="off" 
        // .ui.hidden.fitted.divider
    //- i.grey.tags.icon
    //- .ui.inline.header tags
    if selected_question_tags
        #clear_tags.ui.active.icon.circular.button
            i.remove.icon
        each selected_question_tags
            .unselect_question_tag.ui.active.circular.button
                strong #{this}
    each all_question_tags
        .ui.compact.circular.button.select_question_tag(class=cloud_tag_class) 
            strong #{this.name}



template(name='question_segment')
    //- .ui.card    
    .ui.segment
        img.ui.fluid.image(src="{{c.url question_image_id width=400 height=200 crop='fill'}}")
        .content
            a.ui.header(href="/question/#{_id}/view") #{title}
            each tags
                .ui.basic.label #{this}
                    


template(name='question_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .four.wide.column 
                    .ui.header 
                        i.pencil.icon
                        | edit '#{title}' question
                    a.ui.big.fluid.button(href="/question/#{_id}/view" title='save')
                        i.checkmark.large.green.icon
                        |save
                    +remove_button
                    +image_edit key='image_id' icon='image' label='image' direct=true
                    +array_edit key='tags' label='tags' icon='tags' direct=true
                .six.wide.column 
                    +text_edit key='title' direct=true
                    +html_edit key='description' label='description' icon='content' direct=true
                    //- .ui.header question type
                    //- .ui.button.select_multiple_choice
                    //-     +ismall name='multiple-choice'
                    //-     |multiple choice
                    //- .ui.button.select_essay
                    //-     +ismall name='content'
                    //-     |essay
                    //- .ui.button 
                    //-     +ismall name='hashtag'
                    //-     |number answer
                .six.wide.column
                    .ui.fluid.button.add_choice
                        i.plus.green.icon
                        |choice
                    div.scrolling
                        each choices
                            .ui.segment(class=answer_segment_class)
                                .ui.small.inline.header choice
                                +number_edit key='number' direct=true
                                +html_edit key='content' direct=true
                                +boolean_edit key='correct' direct=true
                            





template(name='question_view')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .four.wide.column
                    a.ui.fluid.button(href="/questions")
                        i.chevron.left.icon
                        +i name='question' classes='ui inline mini image'
                        |questions
                    .ui.header question view 
                    +image_view key='question_image_id' label='image' direct=true
                    a.ui.fluid.button(href="/question/#{_id}/edit")
                        i.pencil.icon
                        |edit
                .twelve.wide.column
                    .ui.header #{title}
                    .ui.header 
                        +i name='question'
                        |choices
                    each choices
                        .ui.segment(class=answer_segment_class)
                            .ui.header 
                                |#{number}:
                                |!{content}
                    //- .ui.button.new_session
                    //-     i.plus.icon
                    //-     |session
                    .ui.header 
                        +i name='question'
                        |answers
                    each sessions
                        .ui.header #{title}
                    +comments
                    


template(name='question_stats')
    //- .ui.accordion
    //-     .title
    .ui.header.refresh_question_stats
        i.line.chart.icon
        |stats
    //- i.dropdown.icon
    //- .content
    .ui.big.list
        .item #{views} views
        .item #{reservation_count} reservations
        .item #{total_earnings}c/#{total_question_hours}hrs total
        .item #{average_question_cost}c / #{average_question_duration}hrs avg question
        //- .item question ranking # reservations
        //- .item question ranking $ earned
        //- .item # different renters
        //- .item avg daily earnings
        //- .item avg weekly earnings
        //- .item avg monthly earnings
        //- .item biggest renter
        //- .item predicted payback duration 
        //- .item predicted payback date 

    //-     //- .ui.header res slot exists
    //-     +reservation_slot_template
    //- else
    //-     if is_product_author
    //-         .ui.button.new_slot
    //-             |new slot
        
template(name='questions_view_template')
    .ui.header question view template
